#!/usr/bin/env ruby
$LOAD_PATH.unshift File.expand_path(File.join(__FILE__, %w(..)))

require 'optparse'
require 'optparse/uri'
require 'lib/option_parser/chronic'
require 'lib/uri/generic'
require 'lib/service_cleaner'

params = {
  host: URI.parse('unix:///var/run/docker.sock'),
  threshold: Time.at(0),
  'exclude-names': []
}

OptionParser.new do |opts|
  opts.banner = "Removes old (after time threshold) docker swarm services. \nUsage: services [options]"
  opts.on("--destructive", "Run in destructive mode (show only without this key)")
  opts.on("--threshold=[TIME]", Chronic, 'Relative time threshold, example: "2 days ago", default: "0 seconds ago"')
  opts.on("--host=[URI]", URI, "Remote docker uri (http://...) or local socket (unix://...), default: unix:///var/run/docker.sock")
  opts.on("--exclude-names=[STRING,STRING,...]", Array, "Exclude name from deletion process")
end.parse!(into: params)

sc = ServiceCleaner.new(**params)
sc.delete_services(sc.get_services)
